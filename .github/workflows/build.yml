name: build
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  universal:
    name: Build on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['12', '14']
        os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v1
    - name: restore lerna
      uses: actions/cache@v2
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('**/package-lock.json') }}
    - name: restore miniconda
      uses: actions/cache@v2
      with:
        path: |
          */*/.miniconda
          */*/Miniconda3-latest*.sh
        key: ${{ runner.os }}-miniconda
    - name: Using Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}
    - name: Building Pipcook
      run: |
        npm install
        npm run build
    - name: Running unit tests
      run: |
        npm test
    - uses: actions/upload-artifact@v2
      with:
        name: pipcook-artifact-${{ GITHUB_SHA }}
        path: ${{ github.workspace }}
  pipeline:
    name: Run the pipeline on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['12']
        os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v1
    - name: restore lerna
      uses: actions/cache@v2
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('**/package-lock.json') }}
    - name: restore miniconda
      uses: actions/cache@v2
      with:
        path: |
          */*/.miniconda
          */*/Miniconda3-latest*.sh
        key: ${{ runner.os }}-miniconda
    - name: Using Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}
    - name: Building Pipcook
      run: |
        npm install
        npm run build
    - name: pipcook init
      env:
        NODE_ENV: local
      run: |
        ./packages/cli/dist/bin/pipcook init
        ./packages/cli/dist/bin/pipcook daemon start
    - name: Running an example pipeline
      run: |
        npm run test:pipeline -- text-bayes-classification
